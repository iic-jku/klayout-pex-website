::: {.content-hidden}
Copyright (C) 2024 Martin KÃ¶hler and co-authors (martin.koehler@jku.at)

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
:::

# Introduction {#sec-intro}

KLayout-PEX (short `KPEX`) is a parasitic extraction tool, well integrated with KLayout.

Multiple PEX engines are supported, currently
  - `FasterCap` integration (field solver engine)
  - `MAGIC` integration (wrapper calling magic)
  - Analytical 2.5D engine (MAGIC parasitic concepts and formulas)

Currently, `KPEX` is developed as a POC Python prototype. Eventually, critical parts will be re-implemented in C++.

::: {.callout-important}
KPEX **tool** source code itself is made publicly available on GitHub ([follow this link](https://github.com/martinjankoehler/klayout-pex)) and shared under the GPL-3.0 license.

KPEX **documentation** source code is made publicly available on GitHub ([follow this link](https://github.com/martinjankoehler/klayout-pex-website)) and shared under the Apache-2.0 license.

Please feel free to submit pull requests on GitHub to fix errors and omissions!

The production of the tool and this document would be impossible without these (and many more) great open-source software products: `KLayout`, `FasterCap`, `MAGIC`, `protobuf`, `Quarto`, `Python`, `ngspice`, `Numpy`, `Scipy`, `Matplotlib`, `Git`, `Docker`, `Ubuntu`, `Linux`...
:::

## Installation

### Option 1: Using `IIC-OSIC-TOOLS` Docker Image

We provide a comprehensive, low entry barrier Docker image that comes with most relevant Open Source ASIC tools, as well as the Open PDKs. This is a pre-compiled Docker image which allows to do circuit design on a virtual machine on virtually any type of computing equipment (personal PC, Raspberry Pi, cloud server) on various operating systems (Windows, macOS, Linux). For further information like installed tools, how to setup a VM, etc., please look at [IIC-OSIC-TOOLS GitHub page](https://github.com/iic-jku/IIC-OSIC-TOOLS).
Find it on Docker Hub at https://hub.docker.com/r/hpretl/iic-osic-tools.

::: {.callout-warning title="Linux"}
In this document, we assume that students have a basic knowledge of Linux and how to operate it using the terminal (shell). If you are not yet familiar with Linux (which is basically a must when doing integrated circuit design as many tools are only available on Linux), then please check out a Linux introductory course or tutorial online, there are many resources available.

A summary of important Linux shell commands is provided in [IIC Linux Cheatsheet](https://iic-jku.github.io/analog-circuit-design/#sec-linux-cheatsheet).
:::

`KPEX` is deployed using PyPi (Python Package Index), install via:
```bash
pip3 install --update klayout-pex
```

### Option 2: Standalone Installation

- `KLayout` is mandatory for all engines (besides the MAGIC-wrapper), [get the latest package version](https://www.klayout.de/build.html) or [follow the build instructions](https://www.klayout.de/build.html) at https://www.klayout.de/build.html.

- `FasterCap` engine:
  - either compile your own version from the [GitHub repository](https://github.com/ediloren/FasterCap/), or
  - use precompiled versions available at https://github.com/martinjankoehler/FasterCap/releases

- `MAGIC`-wrapper engine:
  - Follow the [https://github.com/RTimothyEdwards/magic/blob/master/INSTALL](build instructions) at https://github.com/RTimothyEdwards/magic/

