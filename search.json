[
  {
    "objectID": "doc/python-coverage.html",
    "href": "doc/python-coverage.html",
    "title": "KLayout-PEX",
    "section": "",
    "text": "&lt;/div&gt;\n&lt;div id=\"quarto-navigation-envelope\" class=\"hidden\"&gt;\n&lt;p&gt;&lt;span class=\"hidden quarto-markdown-envelope-contents\" data-render-id=\"cXVhcnRvLWludC1zaWRlYmFyLXRpdGxl\"&gt;KLayout-PEX&lt;/span&gt; &lt;span class=\"hidden quarto-markdown-envelope-contents\" data-render-id=\"cXVhcnRvLWludC1uYXZiYXItdGl0bGU=\"&gt;KLayout-PEX&lt;/span&gt; &lt;span class=\"hidden quarto-markdown-envelope-contents\" data-render-id=\"cXVhcnRvLWludC1uYXZiYXI6QWJvdXQ=\"&gt;About&lt;/span&gt; &lt;span class=\"hidden quarto-markdown-envelope-contents\" data-render-id=\"cXVhcnRvLWludC1uYXZiYXI6L2luZGV4Lmh0bWw=\"&gt;/index.html&lt;/span&gt; &lt;span class=\"hidden quarto-markdown-envelope-contents\" data-render-id=\"cXVhcnRvLWludC1uYXZiYXI6RG9jdW1lbnRhdGlvbg==\"&gt;Documentation&lt;/span&gt; &lt;span class=\"hidden quarto-markdown-envelope-contents\" data-render-id=\"cXVhcnRvLWludC1uYXZiYXI6L2RvYy9kb2MuaHRtbA==\"&gt;/doc/doc.html&lt;/span&gt; &lt;span class=\"hidden quarto-markdown-envelope-contents\" data-render-id=\"cXVhcnRvLWludC1uYXZiYXI6VGVzdCBSZXBvcnRz\"&gt;Test Reports&lt;/span&gt; &lt;span class=\"hidden quarto-markdown-envelope-contents\" data-render-id=\"cXVhcnRvLWludC1uYXZiYXI6L2RvYy90ZXN0LXJlcG9ydHMuaHRtbA==\"&gt;/doc/test-reports.html&lt;/span&gt; &lt;span class=\"hidden quarto-markdown-envelope-contents\" data-render-id=\"cXVhcnRvLWludC1uYXZiYXI68J+QjSBDb3ZlcmFnZQ==\"&gt;üêç Coverage&lt;/span&gt; &lt;span class=\"hidden quarto-markdown-envelope-contents\" data-render-id=\"cXVhcnRvLWludC1uYXZiYXI6L2RvYy9weXRob24tY292ZXJhZ2UuaHRtbA==\"&gt;/doc/python-coverage.html&lt;/span&gt; &lt;span class=\"hidden quarto-markdown-envelope-contents\" data-render-id=\"cXVhcnRvLWludC1uYXZiYXI6e3s8IG1ldGEgdmFyLnVybC1yZXBvID59fQ==\"&gt;https://github.com/martinjankoehler/klayout-pex-website&lt;/span&gt;&lt;/p&gt;\n&lt;div class=\"hidden quarto-markdown-envelope-contents\" data-render-id=\"Zm9vdGVyLXJpZ2h0\"&gt;\n&lt;p&gt;Website built with &lt;a href=\"https://quarto.org/\" class=\"external\" target=\"_blank\"&gt;Quarto&lt;/a&gt; &lt;br&gt; &lt;a href=\"https://github.com/martinjankoehler/klayout-pex-website\" class=\"external\" target=\"_blank\"&gt;Code source&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;div id=\"quarto-meta-markdown\" class=\"hidden\"&gt;\n&lt;p&gt;&lt;span class=\"hidden quarto-markdown-envelope-contents\" data-render-id=\"cXVhcnRvLW1ldGF0aXRsZQ==\"&gt;Python Coverage&lt;/span&gt; &lt;span class=\"hidden quarto-markdown-envelope-contents\" data-render-id=\"cXVhcnRvLXR3aXR0ZXJjYXJkdGl0bGU=\"&gt;Python Coverage&lt;/span&gt; &lt;span class=\"hidden quarto-markdown-envelope-contents\" data-render-id=\"cXVhcnRvLW9nY2FyZHRpdGxl\"&gt;Python Coverage&lt;/span&gt; &lt;span class=\"hidden quarto-markdown-envelope-contents\" data-render-id=\"cXVhcnRvLW1ldGFzaXRlbmFtZQ==\"&gt;KLayout-PEX&lt;/span&gt; &lt;span class=\"hidden quarto-markdown-envelope-contents\" data-render-id=\"cXVhcnRvLXR3aXR0ZXJjYXJkZGVzYw==\"&gt;&lt;/span&gt; &lt;span class=\"hidden quarto-markdown-envelope-contents\" data-render-id=\"cXVhcnRvLW9nY2FyZGRkZXNj\"&gt;&lt;/span&gt;&lt;/p&gt;\n&lt;/div&gt;\n\n&lt;/main&gt; &lt;!-- /main --&gt;\n&lt;script id = \"quarto-html-after-body\" type=\"application/javascript\"&gt;\nwindow.document.addEventListener(\"DOMContentLoaded\", function (event) {\n  const toggleBodyColorMode = (bsSheetEl) =&gt; {\n    const mode = bsSheetEl.getAttribute(\"data-mode\");\n    const bodyEl = window.document.querySelector(\"body\");\n    if (mode === \"dark\") {\n      bodyEl.classList.add(\"quarto-dark\");\n      bodyEl.classList.remove(\"quarto-light\");\n    } else {\n      bodyEl.classList.add(\"quarto-light\");\n      bodyEl.classList.remove(\"quarto-dark\");\n    }\n  }\n  const toggleBodyColorPrimary = () =&gt; {\n    const bsSheetEl = window.document.querySelector(\"link#quarto-bootstrap\");\n    if (bsSheetEl) {\n      toggleBodyColorMode(bsSheetEl);\n    }\n  }\n  toggleBodyColorPrimary();  \n  const disableStylesheet = (stylesheets) =&gt; {\n    for (let i=0; i &lt; stylesheets.length; i++) {\n      const stylesheet = stylesheets[i];\n      stylesheet.rel = 'prefetch';\n    }\n  }\n  const enableStylesheet = (stylesheets) =&gt; {\n    for (let i=0; i &lt; stylesheets.length; i++) {\n      const stylesheet = stylesheets[i];\n      stylesheet.rel = 'stylesheet';\n    }\n  }\n  const manageTransitions = (selector, allowTransitions) =&gt; {\n    const els = window.document.querySelectorAll(selector);\n    for (let i=0; i &lt; els.length; i++) {\n      const el = els[i];\n      if (allowTransitions) {\n        el.classList.remove('notransition');\n      } else {\n        el.classList.add('notransition');\n      }\n    }\n  }\n  const toggleGiscusIfUsed = (isAlternate, darkModeDefault) =&gt; {\n    const baseTheme = document.querySelector('#giscus-base-theme')?.value ?? 'light';\n    const alternateTheme = document.querySelector('#giscus-alt-theme')?.value ?? 'dark';\n    let newTheme = '';\n    if(darkModeDefault) {\n      newTheme = isAlternate ? baseTheme : alternateTheme;\n    } else {\n      newTheme = isAlternate ? alternateTheme : baseTheme;\n    }\n    const changeGiscusTheme = () =&gt; {\n      // From: https://github.com/giscus/giscus/issues/336\n      const sendMessage = (message) =&gt; {\n        const iframe = document.querySelector('iframe.giscus-frame');\n        if (!iframe) return;\n        iframe.contentWindow.postMessage({ giscus: message }, 'https://giscus.app');\n      }\n      sendMessage({\n        setConfig: {\n          theme: newTheme\n        }\n      });\n    }\n    const isGiscussLoaded = window.document.querySelector('iframe.giscus-frame') !== null;\n    if (isGiscussLoaded) {\n      changeGiscusTheme();\n    }\n  }\n  const toggleColorMode = (alternate) =&gt; {\n    // Switch the stylesheets\n    const alternateStylesheets = window.document.querySelectorAll('link.quarto-color-scheme.quarto-color-alternate');\n    manageTransitions('#quarto-margin-sidebar .nav-link', false);\n    if (alternate) {\n      enableStylesheet(alternateStylesheets);\n      for (const sheetNode of alternateStylesheets) {\n        if (sheetNode.id === \"quarto-bootstrap\") {\n          toggleBodyColorMode(sheetNode);\n        }\n      }\n    } else {\n      disableStylesheet(alternateStylesheets);\n      toggleBodyColorPrimary();\n    }\n    manageTransitions('#quarto-margin-sidebar .nav-link', true);\n    // Switch the toggles\n    const toggles = window.document.querySelectorAll('.quarto-color-scheme-toggle');\n    for (let i=0; i &lt; toggles.length; i++) {\n      const toggle = toggles[i];\n      if (toggle) {\n        if (alternate) {\n          toggle.classList.add(\"alternate\");     \n        } else {\n          toggle.classList.remove(\"alternate\");\n        }\n      }\n    }\n    // Hack to workaround the fact that safari doesn't\n    // properly recolor the scrollbar when toggling (#1455)\n    if (navigator.userAgent.indexOf('Safari') &gt; 0 && navigator.userAgent.indexOf('Chrome') == -1) {\n      manageTransitions(\"body\", false);\n      window.scrollTo(0, 1);\n      setTimeout(() =&gt; {\n        window.scrollTo(0, 0);\n        manageTransitions(\"body\", true);\n      }, 40);  \n    }\n  }\n  const isFileUrl = () =&gt; { \n    return window.location.protocol === 'file:';\n  }\n  const hasAlternateSentinel = () =&gt; {  \n    let styleSentinel = getColorSchemeSentinel();\n    if (styleSentinel !== null) {\n      return styleSentinel === \"alternate\";\n    } else {\n      return false;\n    }\n  }\n  const setStyleSentinel = (alternate) =&gt; {\n    const value = alternate ? \"alternate\" : \"default\";\n    if (!isFileUrl()) {\n      window.localStorage.setItem(\"quarto-color-scheme\", value);\n    } else {\n      localAlternateSentinel = value;\n    }\n  }\n  const getColorSchemeSentinel = () =&gt; {\n    if (!isFileUrl()) {\n      const storageValue = window.localStorage.getItem(\"quarto-color-scheme\");\n      return storageValue != null ? storageValue : localAlternateSentinel;\n    } else {\n      return localAlternateSentinel;\n    }\n  }\n  const darkModeDefault = false;\n  let localAlternateSentinel = darkModeDefault ? 'alternate' : 'default';\n  // Dark / light mode switch\n  window.quartoToggleColorScheme = () =&gt; {\n    // Read the current dark / light value \n    let toAlternate = !hasAlternateSentinel();\n    toggleColorMode(toAlternate);\n    setStyleSentinel(toAlternate);\n    toggleGiscusIfUsed(toAlternate, darkModeDefault);\n  };\n  // Ensure there is a toggle, if there isn't float one in the top right\n  if (window.document.querySelector('.quarto-color-scheme-toggle') === null) {\n    const a = window.document.createElement('a');\n    a.classList.add('top-right');\n    a.classList.add('quarto-color-scheme-toggle');\n    a.href = \"\";\n    a.onclick = function() { try { window.quartoToggleColorScheme(); } catch {} return false; };\n    const i = window.document.createElement(\"i\");\n    i.classList.add('bi');\n    a.appendChild(i);\n    window.document.body.appendChild(a);\n  }\n  // Switch to dark mode if need be\n  if (hasAlternateSentinel()) {\n    toggleColorMode(true);\n  } else {\n    toggleColorMode(false);\n  }\n  const icon = \"Óßã\";\n  const anchorJS = new window.AnchorJS();\n  anchorJS.options = {\n    placement: 'right',\n    icon: icon\n  };\n  anchorJS.add('.anchored');\n  const isCodeAnnotation = (el) =&gt; {\n    for (const clz of el.classList) {\n      if (clz.startsWith('code-annotation-')) {                     \n        return true;\n      }\n    }\n    return false;\n  }\n  const onCopySuccess = function(e) {\n    // button target\n    const button = e.trigger;\n    // don't keep focus\n    button.blur();\n    // flash \"checked\"\n    button.classList.add('code-copy-button-checked');\n    var currentTitle = button.getAttribute(\"title\");\n    button.setAttribute(\"title\", \"Copied!\");\n    let tooltip;\n    if (window.bootstrap) {\n      button.setAttribute(\"data-bs-toggle\", \"tooltip\");\n      button.setAttribute(\"data-bs-placement\", \"left\");\n      button.setAttribute(\"data-bs-title\", \"Copied!\");\n      tooltip = new bootstrap.Tooltip(button, \n        { trigger: \"manual\", \n          customClass: \"code-copy-button-tooltip\",\n          offset: [0, -8]});\n      tooltip.show();    \n    }\n    setTimeout(function() {\n      if (tooltip) {\n        tooltip.hide();\n        button.removeAttribute(\"data-bs-title\");\n        button.removeAttribute(\"data-bs-toggle\");\n        button.removeAttribute(\"data-bs-placement\");\n      }\n      button.setAttribute(\"title\", currentTitle);\n      button.classList.remove('code-copy-button-checked');\n    }, 1000);\n    // clear code selection\n    e.clearSelection();\n  }\n  const getTextToCopy = function(trigger) {\n      const codeEl = trigger.previousElementSibling.cloneNode(true);\n      for (const childEl of codeEl.children) {\n        if (isCodeAnnotation(childEl)) {\n          childEl.remove();\n        }\n      }\n      return codeEl.innerText;\n  }\n  const clipboard = new window.ClipboardJS('.code-copy-button:not([data-in-quarto-modal])', {\n    text: getTextToCopy\n  });\n  clipboard.on('success', onCopySuccess);\n  if (window.document.getElementById('quarto-embedded-source-code-modal')) {\n    const clipboardModal = new window.ClipboardJS('.code-copy-button[data-in-quarto-modal]', {\n      text: getTextToCopy,\n      container: window.document.getElementById('quarto-embedded-source-code-modal')\n    });\n    clipboardModal.on('success', onCopySuccess);\n  }\n    var localhostRegex = new RegExp(/^(?:http|https):\\/\\/localhost\\:?[0-9]*\\//);\n    var mailtoRegex = new RegExp(/^mailto:/);\n      var filterRegex = new RegExp(\"https:\\/\\/martinjankoehler\\.github\\.io\\/klayout-pex-website\\/\");\n    var isInternal = (href) =&gt; {\n        return filterRegex.test(href) || localhostRegex.test(href) || mailtoRegex.test(href);\n    }\n    // Inspect non-navigation links and adorn them if external\n \tvar links = window.document.querySelectorAll('a[href]:not(.nav-link):not(.navbar-brand):not(.toc-action):not(.sidebar-link):not(.sidebar-item-toggle):not(.pagination-link):not(.no-external):not([aria-hidden]):not(.dropdown-item):not(.quarto-navigation-tool):not(.about-link)');\n    for (var i=0; i&lt;links.length; i++) {\n      const link = links[i];\n      if (!isInternal(link.href)) {\n        // undo the damage that might have been done by quarto-nav.js in the case of\n        // links that we want to consider external\n        if (link.dataset.originalHref !== undefined) {\n          link.href = link.dataset.originalHref;\n        }\n      }\n    }\n  function tippyHover(el, contentFn, onTriggerFn, onUntriggerFn) {\n    const config = {\n      allowHTML: true,\n      maxWidth: 500,\n      delay: 100,\n      arrow: false,\n      appendTo: function(el) {\n          return el.parentElement;\n      },\n      interactive: true,\n      interactiveBorder: 10,\n      theme: 'quarto',\n      placement: 'bottom-start',\n    };\n    if (contentFn) {\n      config.content = contentFn;\n    }\n    if (onTriggerFn) {\n      config.onTrigger = onTriggerFn;\n    }\n    if (onUntriggerFn) {\n      config.onUntrigger = onUntriggerFn;\n    }\n    window.tippy(el, config); \n  }\n  const noterefs = window.document.querySelectorAll('a[role=\"doc-noteref\"]');\n  for (var i=0; i&lt;noterefs.length; i++) {\n    const ref = noterefs[i];\n    tippyHover(ref, function() {\n      // use id or data attribute instead here\n      let href = ref.getAttribute('data-footnote-href') || ref.getAttribute('href');\n      try { href = new URL(href).hash; } catch {}\n      const id = href.replace(/^#\\/?/, \"\");\n      const note = window.document.getElementById(id);\n      if (note) {\n        return note.innerHTML;\n      } else {\n        return \"\";\n      }\n    });\n  }\n  const xrefs = window.document.querySelectorAll('a.quarto-xref');\n  const processXRef = (id, note) =&gt; {\n    // Strip column container classes\n    const stripColumnClz = (el) =&gt; {\n      el.classList.remove(\"page-full\", \"page-columns\");\n      if (el.children) {\n        for (const child of el.children) {\n          stripColumnClz(child);\n        }\n      }\n    }\n    stripColumnClz(note)\n    if (id === null || id.startsWith('sec-')) {\n      // Special case sections, only their first couple elements\n      const container = document.createElement(\"div\");\n      if (note.children && note.children.length &gt; 2) {\n        container.appendChild(note.children[0].cloneNode(true));\n        for (let i = 1; i &lt; note.children.length; i++) {\n          const child = note.children[i];\n          if (child.tagName === \"P\" && child.innerText === \"\") {\n            continue;\n          } else {\n            container.appendChild(child.cloneNode(true));\n            break;\n          }\n        }\n        if (window.Quarto?.typesetMath) {\n          window.Quarto.typesetMath(container);\n        }\n        return container.innerHTML\n      } else {\n        if (window.Quarto?.typesetMath) {\n          window.Quarto.typesetMath(note);\n        }\n        return note.innerHTML;\n      }\n    } else {\n      // Remove any anchor links if they are present\n      const anchorLink = note.querySelector('a.anchorjs-link');\n      if (anchorLink) {\n        anchorLink.remove();\n      }\n      if (window.Quarto?.typesetMath) {\n        window.Quarto.typesetMath(note);\n      }\n      if (note.classList.contains(\"callout\")) {\n        return note.outerHTML;\n      } else {\n        return note.innerHTML;\n      }\n    }\n  }\n  for (var i=0; i&lt;xrefs.length; i++) {\n    const xref = xrefs[i];\n    tippyHover(xref, undefined, function(instance) {\n      instance.disable();\n      let url = xref.getAttribute('href');\n      let hash = undefined; \n      if (url.startsWith('#')) {\n        hash = url;\n      } else {\n        try { hash = new URL(url).hash; } catch {}\n      }\n      if (hash) {\n        const id = hash.replace(/^#\\/?/, \"\");\n        const note = window.document.getElementById(id);\n        if (note !== null) {\n          try {\n            const html = processXRef(id, note.cloneNode(true));\n            instance.setContent(html);\n          } finally {\n            instance.enable();\n            instance.show();\n          }\n        } else {\n          // See if we can fetch this\n          fetch(url.split('#')[0])\n          .then(res =&gt; res.text())\n          .then(html =&gt; {\n            const parser = new DOMParser();\n            const htmlDoc = parser.parseFromString(html, \"text/html\");\n            const note = htmlDoc.getElementById(id);\n            if (note !== null) {\n              const html = processXRef(id, note);\n              instance.setContent(html);\n            } \n          }).finally(() =&gt; {\n            instance.enable();\n            instance.show();\n          });\n        }\n      } else {\n        // See if we can fetch a full url (with no hash to target)\n        // This is a special case and we should probably do some content thinning / targeting\n        fetch(url)\n        .then(res =&gt; res.text())\n        .then(html =&gt; {\n          const parser = new DOMParser();\n          const htmlDoc = parser.parseFromString(html, \"text/html\");\n          const note = htmlDoc.querySelector('main.content');\n          if (note !== null) {\n            // This should only happen for chapter cross references\n            // (since there is no id in the URL)\n            // remove the first header\n            if (note.children.length &gt; 0 && note.children[0].tagName === \"HEADER\") {\n              note.children[0].remove();\n            }\n            const html = processXRef(null, note);\n            instance.setContent(html);\n          } \n        }).finally(() =&gt; {\n          instance.enable();\n          instance.show();\n        });\n      }\n    }, function(instance) {\n    });\n  }\n      let selectedAnnoteEl;\n      const selectorForAnnotation = ( cell, annotation) =&gt; {\n        let cellAttr = 'data-code-cell=\"' + cell + '\"';\n        let lineAttr = 'data-code-annotation=\"' +  annotation + '\"';\n        const selector = 'span[' + cellAttr + '][' + lineAttr + ']';\n        return selector;\n      }\n      const selectCodeLines = (annoteEl) =&gt; {\n        const doc = window.document;\n        const targetCell = annoteEl.getAttribute(\"data-target-cell\");\n        const targetAnnotation = annoteEl.getAttribute(\"data-target-annotation\");\n        const annoteSpan = window.document.querySelector(selectorForAnnotation(targetCell, targetAnnotation));\n        const lines = annoteSpan.getAttribute(\"data-code-lines\").split(\",\");\n        const lineIds = lines.map((line) =&gt; {\n          return targetCell + \"-\" + line;\n        })\n        let top = null;\n        let height = null;\n        let parent = null;\n        if (lineIds.length &gt; 0) {\n            //compute the position of the single el (top and bottom and make a div)\n            const el = window.document.getElementById(lineIds[0]);\n            top = el.offsetTop;\n            height = el.offsetHeight;\n            parent = el.parentElement.parentElement;\n          if (lineIds.length &gt; 1) {\n            const lastEl = window.document.getElementById(lineIds[lineIds.length - 1]);\n            const bottom = lastEl.offsetTop + lastEl.offsetHeight;\n            height = bottom - top;\n          }\n          if (top !== null && height !== null && parent !== null) {\n            // cook up a div (if necessary) and position it \n            let div = window.document.getElementById(\"code-annotation-line-highlight\");\n            if (div === null) {\n              div = window.document.createElement(\"div\");\n              div.setAttribute(\"id\", \"code-annotation-line-highlight\");\n              div.style.position = 'absolute';\n              parent.appendChild(div);\n            }\n            div.style.top = top - 2 + \"px\";\n            div.style.height = height + 4 + \"px\";\n            div.style.left = 0;\n            let gutterDiv = window.document.getElementById(\"code-annotation-line-highlight-gutter\");\n            if (gutterDiv === null) {\n              gutterDiv = window.document.createElement(\"div\");\n              gutterDiv.setAttribute(\"id\", \"code-annotation-line-highlight-gutter\");\n              gutterDiv.style.position = 'absolute';\n              const codeCell = window.document.getElementById(targetCell);\n              const gutter = codeCell.querySelector('.code-annotation-gutter');\n              gutter.appendChild(gutterDiv);\n            }\n            gutterDiv.style.top = top - 2 + \"px\";\n            gutterDiv.style.height = height + 4 + \"px\";\n          }\n          selectedAnnoteEl = annoteEl;\n        }\n      };\n      const unselectCodeLines = () =&gt; {\n        const elementsIds = [\"code-annotation-line-highlight\", \"code-annotation-line-highlight-gutter\"];\n        elementsIds.forEach((elId) =&gt; {\n          const div = window.document.getElementById(elId);\n          if (div) {\n            div.remove();\n          }\n        });\n        selectedAnnoteEl = undefined;\n      };\n        // Handle positioning of the toggle\n    window.addEventListener(\n      \"resize\",\n      throttle(() =&gt; {\n        elRect = undefined;\n        if (selectedAnnoteEl) {\n          selectCodeLines(selectedAnnoteEl);\n        }\n      }, 10)\n    );\n    function throttle(fn, ms) {\n    let throttle = false;\n    let timer;\n      return (...args) =&gt; {\n        if(!throttle) { // first call gets through\n            fn.apply(this, args);\n            throttle = true;\n        } else { // all the others get throttled\n            if(timer) clearTimeout(timer); // cancel #2\n            timer = setTimeout(() =&gt; {\n              fn.apply(this, args);\n              timer = throttle = false;\n            }, ms);\n        }\n      };\n    }\n      // Attach click handler to the DT\n      const annoteDls = window.document.querySelectorAll('dt[data-target-cell]');\n      for (const annoteDlNode of annoteDls) {\n        annoteDlNode.addEventListener('click', (event) =&gt; {\n          const clickedEl = event.target;\n          if (clickedEl !== selectedAnnoteEl) {\n            unselectCodeLines();\n            const activeEl = window.document.querySelector('dt[data-target-cell].code-annotation-active');\n            if (activeEl) {\n              activeEl.classList.remove('code-annotation-active');\n            }\n            selectCodeLines(clickedEl);\n            clickedEl.classList.add('code-annotation-active');\n          } else {\n            // Unselect the line\n            unselectCodeLines();\n            clickedEl.classList.remove('code-annotation-active');\n          }\n        });\n      }\n  const findCites = (el) =&gt; {\n    const parentEl = el.parentElement;\n    if (parentEl) {\n      const cites = parentEl.dataset.cites;\n      if (cites) {\n        return {\n          el,\n          cites: cites.split(' ')\n        };\n      } else {\n        return findCites(el.parentElement)\n      }\n    } else {\n      return undefined;\n    }\n  };\n  var bibliorefs = window.document.querySelectorAll('a[role=\"doc-biblioref\"]');\n  for (var i=0; i&lt;bibliorefs.length; i++) {\n    const ref = bibliorefs[i];\n    const citeInfo = findCites(ref);\n    if (citeInfo) {\n      tippyHover(citeInfo.el, function() {\n        var popup = window.document.createElement('div');\n        citeInfo.cites.forEach(function(cite) {\n          var citeDiv = window.document.createElement('div');\n          citeDiv.classList.add('hanging-indent');\n          citeDiv.classList.add('csl-entry');\n          var biblioDiv = window.document.getElementById('ref-' + cite);\n          if (biblioDiv) {\n            citeDiv.innerHTML = biblioDiv.innerHTML;\n          }\n          popup.appendChild(citeDiv);\n        });\n        return popup.innerHTML;\n      });\n    }\n  }\n});\n&lt;/script&gt;\n&lt;/div&gt; &lt;!-- /content --&gt;\n&lt;footer class=\"footer\"&gt;\n  &lt;div class=\"nav-footer\"&gt;\n    &lt;div class=\"nav-footer-left\"&gt;\n      &nbsp;\n    &lt;/div&gt;   \n    &lt;div class=\"nav-footer-center\"&gt;\n      &nbsp;\n    &lt;/div&gt;\n    &lt;div class=\"nav-footer-right\"&gt;\n      &lt;div class='footer-contents'&gt;Website built with [Quarto](https://quarto.org/){.external target=\"_blank\"} &lt;br&gt;\n[Code source](https://github.com/martinjankoehler/klayout-pex-website){.external target=\"_blank\"}\n&lt;/div&gt;  \n    &lt;/div&gt;\n  &lt;/div&gt;\n&lt;/footer&gt;\n\n&lt;/body&gt;\n\n&lt;/html&gt;"
  },
  {
    "objectID": "doc/test-reports.html",
    "href": "doc/test-reports.html",
    "title": "KLayout-PEX",
    "section": "",
    "text": "&lt;/div&gt;\n&lt;div id=\"quarto-navigation-envelope\" class=\"hidden\"&gt;\n&lt;p&gt;&lt;span class=\"hidden quarto-markdown-envelope-contents\" data-render-id=\"cXVhcnRvLWludC1zaWRlYmFyLXRpdGxl\"&gt;KLayout-PEX&lt;/span&gt; &lt;span class=\"hidden quarto-markdown-envelope-contents\" data-render-id=\"cXVhcnRvLWludC1uYXZiYXItdGl0bGU=\"&gt;KLayout-PEX&lt;/span&gt; &lt;span class=\"hidden quarto-markdown-envelope-contents\" data-render-id=\"cXVhcnRvLWludC1uYXZiYXI6QWJvdXQ=\"&gt;About&lt;/span&gt; &lt;span class=\"hidden quarto-markdown-envelope-contents\" data-render-id=\"cXVhcnRvLWludC1uYXZiYXI6L2luZGV4Lmh0bWw=\"&gt;/index.html&lt;/span&gt; &lt;span class=\"hidden quarto-markdown-envelope-contents\" data-render-id=\"cXVhcnRvLWludC1uYXZiYXI6RG9jdW1lbnRhdGlvbg==\"&gt;Documentation&lt;/span&gt; &lt;span class=\"hidden quarto-markdown-envelope-contents\" data-render-id=\"cXVhcnRvLWludC1uYXZiYXI6L2RvYy9kb2MuaHRtbA==\"&gt;/doc/doc.html&lt;/span&gt; &lt;span class=\"hidden quarto-markdown-envelope-contents\" data-render-id=\"cXVhcnRvLWludC1uYXZiYXI6VGVzdCBSZXBvcnRz\"&gt;Test Reports&lt;/span&gt; &lt;span class=\"hidden quarto-markdown-envelope-contents\" data-render-id=\"cXVhcnRvLWludC1uYXZiYXI6L2RvYy90ZXN0LXJlcG9ydHMuaHRtbA==\"&gt;/doc/test-reports.html&lt;/span&gt; &lt;span class=\"hidden quarto-markdown-envelope-contents\" data-render-id=\"cXVhcnRvLWludC1uYXZiYXI68J+QjSBDb3ZlcmFnZQ==\"&gt;üêç Coverage&lt;/span&gt; &lt;span class=\"hidden quarto-markdown-envelope-contents\" data-render-id=\"cXVhcnRvLWludC1uYXZiYXI6L2RvYy9weXRob24tY292ZXJhZ2UuaHRtbA==\"&gt;/doc/python-coverage.html&lt;/span&gt; &lt;span class=\"hidden quarto-markdown-envelope-contents\" data-render-id=\"cXVhcnRvLWludC1uYXZiYXI6e3s8IG1ldGEgdmFyLnVybC1yZXBvID59fQ==\"&gt;https://github.com/martinjankoehler/klayout-pex-website&lt;/span&gt;&lt;/p&gt;\n&lt;div class=\"hidden quarto-markdown-envelope-contents\" data-render-id=\"Zm9vdGVyLXJpZ2h0\"&gt;\n&lt;p&gt;Website built with &lt;a href=\"https://quarto.org/\" class=\"external\" target=\"_blank\"&gt;Quarto&lt;/a&gt; &lt;br&gt; &lt;a href=\"https://github.com/martinjankoehler/klayout-pex-website\" class=\"external\" target=\"_blank\"&gt;Code source&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;\n&lt;/div&gt;\n&lt;div id=\"quarto-meta-markdown\" class=\"hidden\"&gt;\n&lt;p&gt;&lt;span class=\"hidden quarto-markdown-envelope-contents\" data-render-id=\"cXVhcnRvLW1ldGF0aXRsZQ==\"&gt;KLayout-PEX&lt;/span&gt; &lt;span class=\"hidden quarto-markdown-envelope-contents\" data-render-id=\"cXVhcnRvLXR3aXR0ZXJjYXJkdGl0bGU=\"&gt;KLayout-PEX&lt;/span&gt; &lt;span class=\"hidden quarto-markdown-envelope-contents\" data-render-id=\"cXVhcnRvLW9nY2FyZHRpdGxl\"&gt;KLayout-PEX&lt;/span&gt; &lt;span class=\"hidden quarto-markdown-envelope-contents\" data-render-id=\"cXVhcnRvLW1ldGFzaXRlbmFtZQ==\"&gt;KLayout-PEX&lt;/span&gt; &lt;span class=\"hidden quarto-markdown-envelope-contents\" data-render-id=\"cXVhcnRvLXR3aXR0ZXJjYXJkZGVzYw==\"&gt;&lt;/span&gt; &lt;span class=\"hidden quarto-markdown-envelope-contents\" data-render-id=\"cXVhcnRvLW9nY2FyZGRkZXNj\"&gt;&lt;/span&gt;&lt;/p&gt;\n&lt;/div&gt;\n\n&lt;/main&gt; &lt;!-- /main --&gt;\n&lt;script id = \"quarto-html-after-body\" type=\"application/javascript\"&gt;\nwindow.document.addEventListener(\"DOMContentLoaded\", function (event) {\n  const toggleBodyColorMode = (bsSheetEl) =&gt; {\n    const mode = bsSheetEl.getAttribute(\"data-mode\");\n    const bodyEl = window.document.querySelector(\"body\");\n    if (mode === \"dark\") {\n      bodyEl.classList.add(\"quarto-dark\");\n      bodyEl.classList.remove(\"quarto-light\");\n    } else {\n      bodyEl.classList.add(\"quarto-light\");\n      bodyEl.classList.remove(\"quarto-dark\");\n    }\n  }\n  const toggleBodyColorPrimary = () =&gt; {\n    const bsSheetEl = window.document.querySelector(\"link#quarto-bootstrap\");\n    if (bsSheetEl) {\n      toggleBodyColorMode(bsSheetEl);\n    }\n  }\n  toggleBodyColorPrimary();  \n  const disableStylesheet = (stylesheets) =&gt; {\n    for (let i=0; i &lt; stylesheets.length; i++) {\n      const stylesheet = stylesheets[i];\n      stylesheet.rel = 'prefetch';\n    }\n  }\n  const enableStylesheet = (stylesheets) =&gt; {\n    for (let i=0; i &lt; stylesheets.length; i++) {\n      const stylesheet = stylesheets[i];\n      stylesheet.rel = 'stylesheet';\n    }\n  }\n  const manageTransitions = (selector, allowTransitions) =&gt; {\n    const els = window.document.querySelectorAll(selector);\n    for (let i=0; i &lt; els.length; i++) {\n      const el = els[i];\n      if (allowTransitions) {\n        el.classList.remove('notransition');\n      } else {\n        el.classList.add('notransition');\n      }\n    }\n  }\n  const toggleGiscusIfUsed = (isAlternate, darkModeDefault) =&gt; {\n    const baseTheme = document.querySelector('#giscus-base-theme')?.value ?? 'light';\n    const alternateTheme = document.querySelector('#giscus-alt-theme')?.value ?? 'dark';\n    let newTheme = '';\n    if(darkModeDefault) {\n      newTheme = isAlternate ? baseTheme : alternateTheme;\n    } else {\n      newTheme = isAlternate ? alternateTheme : baseTheme;\n    }\n    const changeGiscusTheme = () =&gt; {\n      // From: https://github.com/giscus/giscus/issues/336\n      const sendMessage = (message) =&gt; {\n        const iframe = document.querySelector('iframe.giscus-frame');\n        if (!iframe) return;\n        iframe.contentWindow.postMessage({ giscus: message }, 'https://giscus.app');\n      }\n      sendMessage({\n        setConfig: {\n          theme: newTheme\n        }\n      });\n    }\n    const isGiscussLoaded = window.document.querySelector('iframe.giscus-frame') !== null;\n    if (isGiscussLoaded) {\n      changeGiscusTheme();\n    }\n  }\n  const toggleColorMode = (alternate) =&gt; {\n    // Switch the stylesheets\n    const alternateStylesheets = window.document.querySelectorAll('link.quarto-color-scheme.quarto-color-alternate');\n    manageTransitions('#quarto-margin-sidebar .nav-link', false);\n    if (alternate) {\n      enableStylesheet(alternateStylesheets);\n      for (const sheetNode of alternateStylesheets) {\n        if (sheetNode.id === \"quarto-bootstrap\") {\n          toggleBodyColorMode(sheetNode);\n        }\n      }\n    } else {\n      disableStylesheet(alternateStylesheets);\n      toggleBodyColorPrimary();\n    }\n    manageTransitions('#quarto-margin-sidebar .nav-link', true);\n    // Switch the toggles\n    const toggles = window.document.querySelectorAll('.quarto-color-scheme-toggle');\n    for (let i=0; i &lt; toggles.length; i++) {\n      const toggle = toggles[i];\n      if (toggle) {\n        if (alternate) {\n          toggle.classList.add(\"alternate\");     \n        } else {\n          toggle.classList.remove(\"alternate\");\n        }\n      }\n    }\n    // Hack to workaround the fact that safari doesn't\n    // properly recolor the scrollbar when toggling (#1455)\n    if (navigator.userAgent.indexOf('Safari') &gt; 0 && navigator.userAgent.indexOf('Chrome') == -1) {\n      manageTransitions(\"body\", false);\n      window.scrollTo(0, 1);\n      setTimeout(() =&gt; {\n        window.scrollTo(0, 0);\n        manageTransitions(\"body\", true);\n      }, 40);  \n    }\n  }\n  const isFileUrl = () =&gt; { \n    return window.location.protocol === 'file:';\n  }\n  const hasAlternateSentinel = () =&gt; {  \n    let styleSentinel = getColorSchemeSentinel();\n    if (styleSentinel !== null) {\n      return styleSentinel === \"alternate\";\n    } else {\n      return false;\n    }\n  }\n  const setStyleSentinel = (alternate) =&gt; {\n    const value = alternate ? \"alternate\" : \"default\";\n    if (!isFileUrl()) {\n      window.localStorage.setItem(\"quarto-color-scheme\", value);\n    } else {\n      localAlternateSentinel = value;\n    }\n  }\n  const getColorSchemeSentinel = () =&gt; {\n    if (!isFileUrl()) {\n      const storageValue = window.localStorage.getItem(\"quarto-color-scheme\");\n      return storageValue != null ? storageValue : localAlternateSentinel;\n    } else {\n      return localAlternateSentinel;\n    }\n  }\n  const darkModeDefault = false;\n  let localAlternateSentinel = darkModeDefault ? 'alternate' : 'default';\n  // Dark / light mode switch\n  window.quartoToggleColorScheme = () =&gt; {\n    // Read the current dark / light value \n    let toAlternate = !hasAlternateSentinel();\n    toggleColorMode(toAlternate);\n    setStyleSentinel(toAlternate);\n    toggleGiscusIfUsed(toAlternate, darkModeDefault);\n  };\n  // Ensure there is a toggle, if there isn't float one in the top right\n  if (window.document.querySelector('.quarto-color-scheme-toggle') === null) {\n    const a = window.document.createElement('a');\n    a.classList.add('top-right');\n    a.classList.add('quarto-color-scheme-toggle');\n    a.href = \"\";\n    a.onclick = function() { try { window.quartoToggleColorScheme(); } catch {} return false; };\n    const i = window.document.createElement(\"i\");\n    i.classList.add('bi');\n    a.appendChild(i);\n    window.document.body.appendChild(a);\n  }\n  // Switch to dark mode if need be\n  if (hasAlternateSentinel()) {\n    toggleColorMode(true);\n  } else {\n    toggleColorMode(false);\n  }\n  const icon = \"Óßã\";\n  const anchorJS = new window.AnchorJS();\n  anchorJS.options = {\n    placement: 'right',\n    icon: icon\n  };\n  anchorJS.add('.anchored');\n  const isCodeAnnotation = (el) =&gt; {\n    for (const clz of el.classList) {\n      if (clz.startsWith('code-annotation-')) {                     \n        return true;\n      }\n    }\n    return false;\n  }\n  const onCopySuccess = function(e) {\n    // button target\n    const button = e.trigger;\n    // don't keep focus\n    button.blur();\n    // flash \"checked\"\n    button.classList.add('code-copy-button-checked');\n    var currentTitle = button.getAttribute(\"title\");\n    button.setAttribute(\"title\", \"Copied!\");\n    let tooltip;\n    if (window.bootstrap) {\n      button.setAttribute(\"data-bs-toggle\", \"tooltip\");\n      button.setAttribute(\"data-bs-placement\", \"left\");\n      button.setAttribute(\"data-bs-title\", \"Copied!\");\n      tooltip = new bootstrap.Tooltip(button, \n        { trigger: \"manual\", \n          customClass: \"code-copy-button-tooltip\",\n          offset: [0, -8]});\n      tooltip.show();    \n    }\n    setTimeout(function() {\n      if (tooltip) {\n        tooltip.hide();\n        button.removeAttribute(\"data-bs-title\");\n        button.removeAttribute(\"data-bs-toggle\");\n        button.removeAttribute(\"data-bs-placement\");\n      }\n      button.setAttribute(\"title\", currentTitle);\n      button.classList.remove('code-copy-button-checked');\n    }, 1000);\n    // clear code selection\n    e.clearSelection();\n  }\n  const getTextToCopy = function(trigger) {\n      const codeEl = trigger.previousElementSibling.cloneNode(true);\n      for (const childEl of codeEl.children) {\n        if (isCodeAnnotation(childEl)) {\n          childEl.remove();\n        }\n      }\n      return codeEl.innerText;\n  }\n  const clipboard = new window.ClipboardJS('.code-copy-button:not([data-in-quarto-modal])', {\n    text: getTextToCopy\n  });\n  clipboard.on('success', onCopySuccess);\n  if (window.document.getElementById('quarto-embedded-source-code-modal')) {\n    const clipboardModal = new window.ClipboardJS('.code-copy-button[data-in-quarto-modal]', {\n      text: getTextToCopy,\n      container: window.document.getElementById('quarto-embedded-source-code-modal')\n    });\n    clipboardModal.on('success', onCopySuccess);\n  }\n    var localhostRegex = new RegExp(/^(?:http|https):\\/\\/localhost\\:?[0-9]*\\//);\n    var mailtoRegex = new RegExp(/^mailto:/);\n      var filterRegex = new RegExp(\"https:\\/\\/martinjankoehler\\.github\\.io\\/klayout-pex-website\\/\");\n    var isInternal = (href) =&gt; {\n        return filterRegex.test(href) || localhostRegex.test(href) || mailtoRegex.test(href);\n    }\n    // Inspect non-navigation links and adorn them if external\n \tvar links = window.document.querySelectorAll('a[href]:not(.nav-link):not(.navbar-brand):not(.toc-action):not(.sidebar-link):not(.sidebar-item-toggle):not(.pagination-link):not(.no-external):not([aria-hidden]):not(.dropdown-item):not(.quarto-navigation-tool):not(.about-link)');\n    for (var i=0; i&lt;links.length; i++) {\n      const link = links[i];\n      if (!isInternal(link.href)) {\n        // undo the damage that might have been done by quarto-nav.js in the case of\n        // links that we want to consider external\n        if (link.dataset.originalHref !== undefined) {\n          link.href = link.dataset.originalHref;\n        }\n      }\n    }\n  function tippyHover(el, contentFn, onTriggerFn, onUntriggerFn) {\n    const config = {\n      allowHTML: true,\n      maxWidth: 500,\n      delay: 100,\n      arrow: false,\n      appendTo: function(el) {\n          return el.parentElement;\n      },\n      interactive: true,\n      interactiveBorder: 10,\n      theme: 'quarto',\n      placement: 'bottom-start',\n    };\n    if (contentFn) {\n      config.content = contentFn;\n    }\n    if (onTriggerFn) {\n      config.onTrigger = onTriggerFn;\n    }\n    if (onUntriggerFn) {\n      config.onUntrigger = onUntriggerFn;\n    }\n    window.tippy(el, config); \n  }\n  const noterefs = window.document.querySelectorAll('a[role=\"doc-noteref\"]');\n  for (var i=0; i&lt;noterefs.length; i++) {\n    const ref = noterefs[i];\n    tippyHover(ref, function() {\n      // use id or data attribute instead here\n      let href = ref.getAttribute('data-footnote-href') || ref.getAttribute('href');\n      try { href = new URL(href).hash; } catch {}\n      const id = href.replace(/^#\\/?/, \"\");\n      const note = window.document.getElementById(id);\n      if (note) {\n        return note.innerHTML;\n      } else {\n        return \"\";\n      }\n    });\n  }\n  const xrefs = window.document.querySelectorAll('a.quarto-xref');\n  const processXRef = (id, note) =&gt; {\n    // Strip column container classes\n    const stripColumnClz = (el) =&gt; {\n      el.classList.remove(\"page-full\", \"page-columns\");\n      if (el.children) {\n        for (const child of el.children) {\n          stripColumnClz(child);\n        }\n      }\n    }\n    stripColumnClz(note)\n    if (id === null || id.startsWith('sec-')) {\n      // Special case sections, only their first couple elements\n      const container = document.createElement(\"div\");\n      if (note.children && note.children.length &gt; 2) {\n        container.appendChild(note.children[0].cloneNode(true));\n        for (let i = 1; i &lt; note.children.length; i++) {\n          const child = note.children[i];\n          if (child.tagName === \"P\" && child.innerText === \"\") {\n            continue;\n          } else {\n            container.appendChild(child.cloneNode(true));\n            break;\n          }\n        }\n        if (window.Quarto?.typesetMath) {\n          window.Quarto.typesetMath(container);\n        }\n        return container.innerHTML\n      } else {\n        if (window.Quarto?.typesetMath) {\n          window.Quarto.typesetMath(note);\n        }\n        return note.innerHTML;\n      }\n    } else {\n      // Remove any anchor links if they are present\n      const anchorLink = note.querySelector('a.anchorjs-link');\n      if (anchorLink) {\n        anchorLink.remove();\n      }\n      if (window.Quarto?.typesetMath) {\n        window.Quarto.typesetMath(note);\n      }\n      if (note.classList.contains(\"callout\")) {\n        return note.outerHTML;\n      } else {\n        return note.innerHTML;\n      }\n    }\n  }\n  for (var i=0; i&lt;xrefs.length; i++) {\n    const xref = xrefs[i];\n    tippyHover(xref, undefined, function(instance) {\n      instance.disable();\n      let url = xref.getAttribute('href');\n      let hash = undefined; \n      if (url.startsWith('#')) {\n        hash = url;\n      } else {\n        try { hash = new URL(url).hash; } catch {}\n      }\n      if (hash) {\n        const id = hash.replace(/^#\\/?/, \"\");\n        const note = window.document.getElementById(id);\n        if (note !== null) {\n          try {\n            const html = processXRef(id, note.cloneNode(true));\n            instance.setContent(html);\n          } finally {\n            instance.enable();\n            instance.show();\n          }\n        } else {\n          // See if we can fetch this\n          fetch(url.split('#')[0])\n          .then(res =&gt; res.text())\n          .then(html =&gt; {\n            const parser = new DOMParser();\n            const htmlDoc = parser.parseFromString(html, \"text/html\");\n            const note = htmlDoc.getElementById(id);\n            if (note !== null) {\n              const html = processXRef(id, note);\n              instance.setContent(html);\n            } \n          }).finally(() =&gt; {\n            instance.enable();\n            instance.show();\n          });\n        }\n      } else {\n        // See if we can fetch a full url (with no hash to target)\n        // This is a special case and we should probably do some content thinning / targeting\n        fetch(url)\n        .then(res =&gt; res.text())\n        .then(html =&gt; {\n          const parser = new DOMParser();\n          const htmlDoc = parser.parseFromString(html, \"text/html\");\n          const note = htmlDoc.querySelector('main.content');\n          if (note !== null) {\n            // This should only happen for chapter cross references\n            // (since there is no id in the URL)\n            // remove the first header\n            if (note.children.length &gt; 0 && note.children[0].tagName === \"HEADER\") {\n              note.children[0].remove();\n            }\n            const html = processXRef(null, note);\n            instance.setContent(html);\n          } \n        }).finally(() =&gt; {\n          instance.enable();\n          instance.show();\n        });\n      }\n    }, function(instance) {\n    });\n  }\n      let selectedAnnoteEl;\n      const selectorForAnnotation = ( cell, annotation) =&gt; {\n        let cellAttr = 'data-code-cell=\"' + cell + '\"';\n        let lineAttr = 'data-code-annotation=\"' +  annotation + '\"';\n        const selector = 'span[' + cellAttr + '][' + lineAttr + ']';\n        return selector;\n      }\n      const selectCodeLines = (annoteEl) =&gt; {\n        const doc = window.document;\n        const targetCell = annoteEl.getAttribute(\"data-target-cell\");\n        const targetAnnotation = annoteEl.getAttribute(\"data-target-annotation\");\n        const annoteSpan = window.document.querySelector(selectorForAnnotation(targetCell, targetAnnotation));\n        const lines = annoteSpan.getAttribute(\"data-code-lines\").split(\",\");\n        const lineIds = lines.map((line) =&gt; {\n          return targetCell + \"-\" + line;\n        })\n        let top = null;\n        let height = null;\n        let parent = null;\n        if (lineIds.length &gt; 0) {\n            //compute the position of the single el (top and bottom and make a div)\n            const el = window.document.getElementById(lineIds[0]);\n            top = el.offsetTop;\n            height = el.offsetHeight;\n            parent = el.parentElement.parentElement;\n          if (lineIds.length &gt; 1) {\n            const lastEl = window.document.getElementById(lineIds[lineIds.length - 1]);\n            const bottom = lastEl.offsetTop + lastEl.offsetHeight;\n            height = bottom - top;\n          }\n          if (top !== null && height !== null && parent !== null) {\n            // cook up a div (if necessary) and position it \n            let div = window.document.getElementById(\"code-annotation-line-highlight\");\n            if (div === null) {\n              div = window.document.createElement(\"div\");\n              div.setAttribute(\"id\", \"code-annotation-line-highlight\");\n              div.style.position = 'absolute';\n              parent.appendChild(div);\n            }\n            div.style.top = top - 2 + \"px\";\n            div.style.height = height + 4 + \"px\";\n            div.style.left = 0;\n            let gutterDiv = window.document.getElementById(\"code-annotation-line-highlight-gutter\");\n            if (gutterDiv === null) {\n              gutterDiv = window.document.createElement(\"div\");\n              gutterDiv.setAttribute(\"id\", \"code-annotation-line-highlight-gutter\");\n              gutterDiv.style.position = 'absolute';\n              const codeCell = window.document.getElementById(targetCell);\n              const gutter = codeCell.querySelector('.code-annotation-gutter');\n              gutter.appendChild(gutterDiv);\n            }\n            gutterDiv.style.top = top - 2 + \"px\";\n            gutterDiv.style.height = height + 4 + \"px\";\n          }\n          selectedAnnoteEl = annoteEl;\n        }\n      };\n      const unselectCodeLines = () =&gt; {\n        const elementsIds = [\"code-annotation-line-highlight\", \"code-annotation-line-highlight-gutter\"];\n        elementsIds.forEach((elId) =&gt; {\n          const div = window.document.getElementById(elId);\n          if (div) {\n            div.remove();\n          }\n        });\n        selectedAnnoteEl = undefined;\n      };\n        // Handle positioning of the toggle\n    window.addEventListener(\n      \"resize\",\n      throttle(() =&gt; {\n        elRect = undefined;\n        if (selectedAnnoteEl) {\n          selectCodeLines(selectedAnnoteEl);\n        }\n      }, 10)\n    );\n    function throttle(fn, ms) {\n    let throttle = false;\n    let timer;\n      return (...args) =&gt; {\n        if(!throttle) { // first call gets through\n            fn.apply(this, args);\n            throttle = true;\n        } else { // all the others get throttled\n            if(timer) clearTimeout(timer); // cancel #2\n            timer = setTimeout(() =&gt; {\n              fn.apply(this, args);\n              timer = throttle = false;\n            }, ms);\n        }\n      };\n    }\n      // Attach click handler to the DT\n      const annoteDls = window.document.querySelectorAll('dt[data-target-cell]');\n      for (const annoteDlNode of annoteDls) {\n        annoteDlNode.addEventListener('click', (event) =&gt; {\n          const clickedEl = event.target;\n          if (clickedEl !== selectedAnnoteEl) {\n            unselectCodeLines();\n            const activeEl = window.document.querySelector('dt[data-target-cell].code-annotation-active');\n            if (activeEl) {\n              activeEl.classList.remove('code-annotation-active');\n            }\n            selectCodeLines(clickedEl);\n            clickedEl.classList.add('code-annotation-active');\n          } else {\n            // Unselect the line\n            unselectCodeLines();\n            clickedEl.classList.remove('code-annotation-active');\n          }\n        });\n      }\n  const findCites = (el) =&gt; {\n    const parentEl = el.parentElement;\n    if (parentEl) {\n      const cites = parentEl.dataset.cites;\n      if (cites) {\n        return {\n          el,\n          cites: cites.split(' ')\n        };\n      } else {\n        return findCites(el.parentElement)\n      }\n    } else {\n      return undefined;\n    }\n  };\n  var bibliorefs = window.document.querySelectorAll('a[role=\"doc-biblioref\"]');\n  for (var i=0; i&lt;bibliorefs.length; i++) {\n    const ref = bibliorefs[i];\n    const citeInfo = findCites(ref);\n    if (citeInfo) {\n      tippyHover(citeInfo.el, function() {\n        var popup = window.document.createElement('div');\n        citeInfo.cites.forEach(function(cite) {\n          var citeDiv = window.document.createElement('div');\n          citeDiv.classList.add('hanging-indent');\n          citeDiv.classList.add('csl-entry');\n          var biblioDiv = window.document.getElementById('ref-' + cite);\n          if (biblioDiv) {\n            citeDiv.innerHTML = biblioDiv.innerHTML;\n          }\n          popup.appendChild(citeDiv);\n        });\n        return popup.innerHTML;\n      });\n    }\n  }\n});\n&lt;/script&gt;\n&lt;/div&gt; &lt;!-- /content --&gt;\n&lt;footer class=\"footer\"&gt;\n  &lt;div class=\"nav-footer\"&gt;\n    &lt;div class=\"nav-footer-left\"&gt;\n      &nbsp;\n    &lt;/div&gt;   \n    &lt;div class=\"nav-footer-center\"&gt;\n      &nbsp;\n    &lt;/div&gt;\n    &lt;div class=\"nav-footer-right\"&gt;\n      &lt;div class='footer-contents'&gt;Website built with [Quarto](https://quarto.org/){.external target=\"_blank\"} &lt;br&gt;\n[Code source](https://github.com/martinjankoehler/klayout-pex-website){.external target=\"_blank\"}\n&lt;/div&gt;  \n    &lt;/div&gt;\n  &lt;/div&gt;\n&lt;/footer&gt;\n\n&lt;/body&gt;\n\n&lt;/html&gt;"
  },
  {
    "objectID": "index.html#install",
    "href": "index.html#install",
    "title": "KLayout-PEX",
    "section": "Install",
    "text": "Install\npip install klayout-pex\nAfter that, you should be able to run kpex --help."
  },
  {
    "objectID": "doc/doc.html#motivation",
    "href": "doc/doc.html#motivation",
    "title": "KLayout-PEX Documentation",
    "section": "1.1 Motivation",
    "text": "1.1 Motivation\nIn Electronic Design and Automation (EDA) for Integrated Circuits (ICs), a schematic presents an abstraction in comparison to the layout that will eventually be taped-out and fabricated by the semiconductor foundry.\nWhile in the schematic, a connection between device terminals is seen as an equipotential, the stacked geometries in a specific layout introduce parasitic effects, which can be thought of additional resistors, capacitors (and inductors), not modeled by and missing in the original schematic.\nTo be able to simulate these effects, a parasitic extraction tool (PEX) is used, to extract a netlist from the layout, which represents the original schematic (created from the layout active and passive elements) augmented with the additional parasitic devices."
  },
  {
    "objectID": "doc/doc.html#about-klayout-pex",
    "href": "doc/doc.html#about-klayout-pex",
    "title": "KLayout-PEX Documentation",
    "section": "1.2 About KLayout-PEX",
    "text": "1.2 About KLayout-PEX\nKLayout is an open source VLSI layout viewer and editor.\nKLayout-PEX (short KPEX) is a PEX tool, well integrated with KLayout by using its API.\nThere are multiple PEX engines supported, currently:\n\nFasterCap integration (field solver engine)\nMAGIC integration (wrapper calling magic)\nAnalytical 2.5D engine (parasitic concepts and formulas of MAGIC, implemented using KLayout methods)\n\n\n\n\n\n\n\nTip\n\n\n\nKPEX tool source code itself is made publicly available on GitHub (follow this link) and shared under the GPL-3.0 license.\nKPEX documentation source code is made publicly available on GitHub (follow this link) and shared under the Apache-2.0 license.\nPlease feel free to create issues and/or submit pull requests on GitHub to fix errors and omissions!\nThe production of the tool and this document would be impossible without these (and many more) great open-source software products: KLayout, FasterCap, MAGIC, protobuf, Quarto, Python, ngspice, Numpy, Scipy, Matplotlib, Git, Docker, Ubuntu, Linux‚Ä¶\n\n\n\n\n\n\n\n\nCaution\n\n\n\nCurrently, KPEX is developed as a Python prototype, using the KLayout Python API. This allows for a faster development cycle during the current prototyping phase.\nEventually, critical parts will be re-implemented (in C++, and parallelized), to improve performance. As we‚Äôre already using the KLayout API (which is pretty similar between Python, Ruby and C++), this will be relatively straight-forward."
  },
  {
    "objectID": "doc/doc.html#sec-intro-installation",
    "href": "doc/doc.html#sec-intro-installation",
    "title": "KLayout-PEX Documentation",
    "section": "1.3 Installation",
    "text": "1.3 Installation\nGenerally, KPEX is deployed using PyPi (Python Package Index), install via:\npip3 install --upgrade klayout-pex\n\nkpex --version   # check the installed version \nkpex --help      # this will help with command line arguments\nAs for the dependencies, there are multiple options available.\n\n1.3.1 Option 1: Using IIC-OSIC-TOOLS Docker Image\nWe provide a comprehensive, low entry barrier Docker image that comes pre-installed with most relevant open source ASIC tools, as well as the open PDKs. This is a pre-compiled Docker image which allows to do circuit design on a virtual machine on virtually any type of computing equipment (personal PC, Raspberry Pi, cloud server) on various operating systems (Windows, macOS, Linux).\nFor further information please look at the Docker Hub page and for detailed instructions at the IIC-OSIC-TOOLS GitHub page.\n\n\n\n\n\n\nLinux\n\n\n\nIn this document, we assume that users have a basic knowledge of Linux and how to operate it using the terminal (shell). If you are not yet familiar with Linux (which is basically a must when doing integrated circuit design as many tools are only available on Linux), then please check out a Linux introductory course or tutorial online, there are many resources available.\nA summary of important Linux shell commands is provided in IIC-JKU Linux Cheatsheet.\n\n\n\n\n1.3.2 Option 2: Standalone Installation\n\nKLayout layout tool:\n\nis mandatory for all engines (besides the MAGIC-wrapper)\nget the latest pre-built package version\nor follow the build instructions\n\nFasterCap engine:\n\noptional, required to run the FasterCap engine\neither compile your own version from the GitHub repository\nor use precompiled versions available at https://github.com/martinjankoehler/FasterCap/releases\n\nMAGIC-wrapper engine:\n\noptional, required to run the MAGIC-wrapper engine\nFollow the installation instructions at the GitHub repository\n\nSkywater sky130A PDK:\n\noptional, for now, KPEX technology specific files are deployed within the klayout-pex Python package\npip3 install --upgrade volare (install PDK package manager)\nvolare ls-remote (retrieve available PDK releases\n\nfor example PRE-RELEASE 0c1df35fd535299ea1ef74d1e9e15dedaeb34c32 (2024.12.11))\n\nvolare enable 0c1df35fd535299ea1ef74d1e9e15dedaeb34c32 (install a PDK version)\nPDK files now have been installed under $HOME/.volare/sky130A\n\nIHP SG13G2 PDK:\n\noptional, for now, KPEX technology specific files are deployed within the klayout-pex Python package\ngit clone https://github.com/IHP-GmbH/IHP-Open-PDK (install PDK package manager)\n\n\n\n\n1.3.3 Useful tools: meshlab\nFor previewing generated 3D geometries, representing the input to FasterCap, we recommend installing MeshLab. The generated STL-files are located at output/&lt;design&gt;/Geometries/*.stl."
  },
  {
    "objectID": "doc/doc.html#example-layouts",
    "href": "doc/doc.html#example-layouts",
    "title": "KLayout-PEX Documentation",
    "section": "2.1 Example Layouts",
    "text": "2.1 Example Layouts\nExample layouts are included in the testdata/designs subdirectory of the KLayout-PEX source code:\ngit clone https://github.com/martinjankoehler/klayout-pex.git \n\n# for sky130A\nfind testdata/designs/sky130A -name \"*.gds.gz\"\n\n# for IHP SG13G2\nfind testdata/designs/ihp_sg13g2 -name \"*.gds.gz\""
  },
  {
    "objectID": "doc/doc.html#sec-first-steps-run-fastercap-engine",
    "href": "doc/doc.html#sec-first-steps-run-fastercap-engine",
    "title": "KLayout-PEX Documentation",
    "section": "2.2 Running the KPEX/FasterCap engine",
    "text": "2.2 Running the KPEX/FasterCap engine\nPreconditions:\n\nklayout-pex was installed, see Section¬†1.3\nFasterCap was installed, see Section¬†1.3\n\n\n\n\n\n\n\nNote\n\n\n\nNormally, devices with SPICE (Nagel 1975) simulation models (e.g.¬†like MOM-capacitors1 in the sky130A PDK) are ignored (‚Äúblackboxed‚Äù) during parasitic extraction.\nkpex has an option --blacklist n to allow extraction of those devices (whiteboxing), which can be useful during development (during the prototype phase, whiteboxing is actually the default setting, so please use --blacklist y to explicitly configure blackboxing).\n\n\nLet‚Äôs try the following:\nkpex --pdk sky130A --blackbox n --gds \\\n  testdata/designs/sky130A/*/cap_vpp_04p4x04p6_l1m1m2_noshield.gds.gz\n\n\n\n\n\n\nNote\n\n\n\nThis will report an error that we have not activated one or more engines, and list the available engines:\n\n\n\nArgument\nDescription\n\n\n\n\n--fastercap y\nRun kpex/FasterCap engine\n\n\n--2.5D y\nRun kpex/2.5D engine\n\n\n--magic y\nRun MAGIC engine\n\n\n\n\n\nNow, to run the FasterCap engine (might take a couple of minutes):\nkpex --pdk sky130A --blackbox n --fastercap y --gds \\\n  testdata/designs/sky130A/*/cap_vpp_04p4x04p6_l1m1m2_noshield.gds.gz\nWithin the output directory (defaults to output), KPEX creates a subdirectory Geometries, containing STL-files that provide a preview of the FasterCap input geometries. Use MeshLab (see Section¬†1.3.3) to open and preview those files:\nls -d output/cap_vpp_04*/Geometries/*.stl\n\n\n\n\n\n\nTip\n\n\n\n\nOpen the *.stl files in MeshLab\nUse the eye buttons to hide and show each file/mesh\nUse the align tool (‚ÄúA‚Äù in the toolbar) to assign different colors\nStart by showing only on the conductors (files named cond_*.stl)\nThen try showing different dielectrics (files named diel_*.stl), to see how they surround the conductors.\n\n\n\n\nIn the log file, we see the output of FasterCap including the Maxwell capacitance matrix:\nCapacitance matrix is:\nDimension 3 x 3\ng1_VSUBS  5.2959e-09 -4.46971e-10 -1.67304e-09\ng2_C1  -5.56106e-10 1.5383e-08 -1.47213e-08\ng3_C0  -1.69838e-09 -1.48846e-08 1.64502e-08\nKPEX interprets this matrix and prints a CSV netlist, which can be pasted into a spreadsheet application:\nDevice;Net1;Net2;Capacitance [fF]\nCext_0_1;VSUBS;C1;0.5\nCext_0_2;VSUBS;C0;1.69\nCext_1_2;C1;C0;14.8\nCext_1_1;C1;VSUBS;0.08\nIn addition, a SPICE netlist is generated."
  },
  {
    "objectID": "doc/doc.html#sec-first-steps-run-magic-engine",
    "href": "doc/doc.html#sec-first-steps-run-magic-engine",
    "title": "KLayout-PEX Documentation",
    "section": "2.3 Running the KPEX/MAGIC engine",
    "text": "2.3 Running the KPEX/MAGIC engine\nPreconditions:\n\nklayout-pex was installed, see Section¬†1.3\nmagic was installed, see Section¬†1.3\n\nThe magic section of kpex --help describes the arguments and their defaults. Important arguments:\n\n--magicrc: specify location of the magicrc file\n--gds: path to the GDS input layout\n--magic y: enable magic engine\n\nkpex --pdk sky130A --magic y --gds \\\n  testdata/designs/sky130A/*/cap_vpp_04p4x04p6_l1m1m2_noshield.gds.gz"
  },
  {
    "objectID": "doc/doc.html#sec-tech-def",
    "href": "doc/doc.html#sec-tech-def",
    "title": "KLayout-PEX Documentation",
    "section": "3.1 Technology Definition Files",
    "text": "3.1 Technology Definition Files\nThe KPEX technology definition format uses Google Protocol Buffers, so there is:\n\nformal schema files, defining the structure and data types involved\n\nprotos/tech.proto: main schema / entry point, includes the others\nprotos/process_stack.proto: describes details of the process stack, such as dielectrics and heights of layers\nprotos/process_parasitics.proto: parasitic tables, used to parametrize the 2.5D engine\n\nmultiple concrete instantiations, that adhere to this schema (called messages in the protobuf lingo)\n\nin the form of JSON files\nSkywater 130A: klayout_pex_protobuf/sky130A_tech.pb.json\nIHP SG13G2: klayout_pex_protobuf/ihp_sg13g2_tech.pb.json\n\n\n\n\n\n\n\n\nNote\n\n\n\nThe built-in JSON tech files are programmatically generated during the build process2. Therefore they not part of the repository source code, but of course part of the deployed Python wheels. To review those, look into your Python site-packages3/klayout_pex_protobuf."
  },
  {
    "objectID": "doc/doc.html#customized-pex-lvs-scripts",
    "href": "doc/doc.html#customized-pex-lvs-scripts",
    "title": "KLayout-PEX Documentation",
    "section": "3.2 Customized PEX-‚ÄúLVS‚Äù scripts",
    "text": "3.2 Customized PEX-‚ÄúLVS‚Äù scripts\nKLayout has built-in support for Layout-Versus-Schematic (LVS) scripts, based on its Ruby API. Customized ‚ÄúLVS‚Äù scripts are (‚Äúab‚Äù)used in KPEX, not with the intent of comparing Layout-Versus-Schematic, but rather to extract the connectivity/net information for all polygons across multiple layers. The resulting net information is stored in a KLayout LVS Database (‚ÄúLVSDB‚Äù).\n\n\n\nKPEX Net Formation\n\n\nThese customized ‚ÄúLVS‚Äù scripts are stored in:\n\nSkywater sky130A: pdk/sky130A/libs.tech/kpex/sky130.lvs\nIHP SG13G2: pdk/ihp_sg13gs/libs.tech/kpex/sg13g2.lvs\n\nWhat‚Äôs specific about this customization:\n\nLayers names must be assigned, using KLayout‚Äôs (name(layer, name)) function\nMOM4 capacitors, MIM5 capacitors and resistors should be extracted to separate layers, to enable blackboxing / whiteboxing.\n\nThe layer names in the script must correspond with the names configured in the tech JSON file."
  },
  {
    "objectID": "doc/doc.html#d-input-geometries",
    "href": "doc/doc.html#d-input-geometries",
    "title": "KLayout-PEX Documentation",
    "section": "4.1 3D Input Geometries",
    "text": "4.1 3D Input Geometries\n\n\n\nFasterCap 3D Input: File System Overview\n\n\nKPEX generates 3D input geometries:\n\n*.lst file: Main input file\n\ndefines dielectric instances\ndefines conductor instances\neach instance refers to a *.geo file\n\n*.geo files: Defines single geometry\n\ndefines shapes (e.g.¬†triangles)\nEach shape has a reference point to define inside/outsides\n\n\n\n\n\nFasterCap 3D Input: File Format"
  },
  {
    "objectID": "doc/doc.html#output-maxwell-capacitance-matrix",
    "href": "doc/doc.html#output-maxwell-capacitance-matrix",
    "title": "KLayout-PEX Documentation",
    "section": "4.2 Output Maxwell Capacitance Matrix",
    "text": "4.2 Output Maxwell Capacitance Matrix\nA Maxwell capacitance matrix (Maxwell 1873) provides the relation between voltages on a set of conductors and the charges on these conductors.\nFasterCap log output prints the Maxwell capacitance matrix (one for each iteration/refinement).\n\n\n\nFasterCap Log Output: Maxwell Capacitance Matrix\n\n\n\nMatrix Properties:\n\nScaling: units have to be divided by \\(10^{-6}\\)\nrows and columns are the same (list of net names)\nRow Cells:\n\noff diagonals cells contains the coupling between row/col nets (times \\(-1\\))\ndiagonal cells contains the sum of the absolute values of all other cells in the row\n\nMatrix Symmetry:\n\nin theory (ideal world), the matrix would be symmetric\nin practice it‚Äôs not\n\ntherefore FastCap2 did average the off-diagonals\nFasterCap does not average, so it‚Äôs done as part of KPEX\n\n\n\n\n\n\nFasterCap Maxwell Capacitance Matrix: Interpretation"
  },
  {
    "objectID": "doc/doc.html#sec-magic-cap-types",
    "href": "doc/doc.html#sec-magic-cap-types",
    "title": "KLayout-PEX Documentation",
    "section": "5.1 Types of Parasitic Capacitances",
    "text": "5.1 Types of Parasitic Capacitances\nMAGIC models multiple types of capacitances:\n\nSubstrate Overlap: Overlap area of a metal with the substrate\nSubstrate Fringing: Sidewall of a metal fringes out to substrate\nSidewall Capacitance: Coupling between adjacent sidewalls on the same layer\nOverlap Capacitance: Overlap on different metal layers\nFringe Capacitance (‚ÄúSide Overlap‚Äù): Sidewall of a metal fringes out other metal layers"
  },
  {
    "objectID": "doc/doc.html#substrate-capacitance",
    "href": "doc/doc.html#substrate-capacitance",
    "title": "KLayout-PEX Documentation",
    "section": "5.2 Substrate Capacitance",
    "text": "5.2 Substrate Capacitance\n\n\nOverlapping area: \\[\nC_{area} = \\frac{\\epsilon_{si} * K}{d} * \\text{area} \\,\\,\\,\\,\\,\\,\\, \\left[ \\frac{F}{\\mu m^2} * \\mu m^2\\right]\n\\]\nFringe (‚ÄúPerimeter‚Äù): \\[\nC_{fringe\\,to\\,substrate} = \\text{perimeter} * C_{perim} = (2l + 2w)*C_{perim}\n\\]\nCoefficients like \\(C_{perim}\\) are part of the tech files (Parasitic Tables)"
  },
  {
    "objectID": "doc/doc.html#sidewall-capacitance",
    "href": "doc/doc.html#sidewall-capacitance",
    "title": "KLayout-PEX Documentation",
    "section": "5.3 Sidewall Capacitance",
    "text": "5.3 Sidewall Capacitance\n\n\\[\nC_{sidewall} = \\frac{\\epsilon_{si} * K}{s} * \\text{sidewall area}  \\,\\,\\,\\,\\,\\,\\, \\left[ \\frac{F}{\\mu m^2} * \\mu m^2\\right]\n\\] \\[\n\\,\\,\\,\\,\\,\\,\\,\\,\\,\\,= \\frac{\\epsilon_{si} * K}{s} * t * l  \\,\\,\\,\\,\\,\\,\\, \\left[ \\frac{F}{\\mu m^2} * \\mu m * \\mu m\\right]\n\\] \\[\nC_{sidewall} = \\frac{C_{sidewall\\,coeff}}{s} * l \\,\\,\\,\\,\\,\\,\\, \\left[ \\frac{F}{\\mu m} * \\mu m\\right]\n\\]\n\n\nCoefficients are part of the tech files (Parasitic Tables)\nLayer thickness \\(t\\) is normally multiplied into the coefficient\nFoundry tables give constant coefficient referenced to \\(s = 1\\)"
  },
  {
    "objectID": "doc/doc.html#overlap-capacitance",
    "href": "doc/doc.html#overlap-capacitance",
    "title": "KLayout-PEX Documentation",
    "section": "5.4 Overlap Capacitance",
    "text": "5.4 Overlap Capacitance\n\nOverlapping area: \\[\nC_{area} = \\frac{\\epsilon_{si} * K}{d} * \\text{area} \\,\\,\\,\\,\\,\\,\\, \\left[ \\frac{F}{\\mu m^2} * \\mu m^2\\right]\n\\]\n\n\n\n\nOverlap Capacitance"
  },
  {
    "objectID": "doc/doc.html#fringe-capacitance",
    "href": "doc/doc.html#fringe-capacitance",
    "title": "KLayout-PEX Documentation",
    "section": "5.5 Fringe Capacitance",
    "text": "5.5 Fringe Capacitance\n\n\n\nFringe Capacitance: Overlapping (1)\n\n\n\nCausing sidewall (its bottom edge depicted red)\nAssume: Field is bounded by fringe halo (e.g.¬†\\(8\\, \\mu m\\) away from edge)\nFractions of fringe goes to metal1 or substrate\n\n\n\n\nFringe Capacitance: Overlapping (2)\n\n\n\nMultiplier \\(\\alpha\\) (comes from tech files: overlap table)\n\ndetermines how quickly fringe capacitance drops with increasing distance\n\\(\\alpha\\) is related to distance \\(d\\)Ôøº between layers\n\\(\\alpha\\) is proportional to \\(C_{overlap_{metal1 \\leftrightarrow metal2}}= \\frac{\\epsilon_{si} * K}{d} * \\text{area}\\)\n(for fixed value of area \\(1\\, \\mu m^2\\)) \n\nFringe Fractions:\n\n\\(\\text{frac}_{metal1} = \\tfrac{2}{\\pi} * \\text{atan}(\\alpha_{metal2 \\rightarrow metal1}*x)\\)\n\\(\\text{frac}_{sub} = \\tfrac{2}{\\pi} * \\text{atan}(\\alpha_{metal2 \\rightarrow sub}*(\\text{halo}-x))\\)\n\\(\\tfrac{2}{\\pi}\\) is multiplied because of scaling to interval \\([0.0,\\,1.0]\\), asÔøº\\(\\text{atan}(\\infty)=\\tfrac{\\pi}{2}\\)\n\nOverlap capacitance:\n\n\\(C_{overlap} = \\frac{\\epsilon_{si} * K}{d} * \\text{area} \\,\\,\\,\\,\\,\\,\\,\\,(\\text{with area}=1 \\mu m^2)\\)\n\nCoupling capacitance \\(metal1 \\leftrightarrow metal2\\):\n\n\\(\\alpha_{metal1 \\leftrightarrow metal2} = \\alpha_{scalefac} * C_{overlap_{metal1 \\leftrightarrow metal2}}\\)\n\\(\\text{frac}_{metal1} = \\tfrac{2}{\\pi} * \\text{atan}(\\alpha_{metal1 \\leftrightarrow metal2}*x)\\)\n\\(\\text{effective length} = \\text{edge length} * \\text{frac}_{metal1}\\)\n\\(C_{fringe_{metal2 \\rightarrow metal1}} = \\text{effective length} * C_{sideoverlap_{metal2 \\rightarrow metal1}}\\)\n\nCoupling capacitance \\(metal1 \\leftrightarrow sub\\):\n\n\\(\\alpha_{metal1 \\leftrightarrow sub} = \\alpha_{scalefac} * C_{overlap_{metal1 \\leftrightarrow sub}}\\)\n\\(\\text{frac}_{sub} = \\tfrac{2}{\\pi} * \\text{atan}(\\alpha_{metal1 \\leftrightarrow sub}*(\\text{halo}-x))\\)\n\\(\\text{effective length} = \\text{edge length} * \\text{frac}_{sub}\\)\n\\(C_{fringe_{metal2 \\rightarrow sub}} = \\text{effective length} * C_{sideoverlap_{metal2 \\rightarrow sub}}\\)\n\n\n\n\n\nFringe Capacitance: Non Overlapping (1)\n\n\n\nPartial side overlap\n\nIn case there is only a partial side overlap, the non-existing near fraction is subtracted from the far fraction\n\\(metal1\\) wire is offset, starts at \\(x_{near}\\)\n\\(metal1\\) ends at \\(x_{far}\\)\n\n\n\n\n\nFringe Capacitance: Non Overlapping (2)\n\n\n\n\\(\\text{frac}_{near} = \\tfrac{2}{\\pi} * \\text{atan}(\\alpha*x_{near})\\)\n\\(\\text{frac}_{far} = \\tfrac{2}{\\pi} * \\text{atan}(\\alpha*x_{far})\\)\n\\(\\text{frac} = \\text{frac}_{far}-\\text{frac}_{near}\\)"
  },
  {
    "objectID": "doc/doc.html#shielding-effects",
    "href": "doc/doc.html#shielding-effects",
    "title": "KLayout-PEX Documentation",
    "section": "5.6 Shielding Effects",
    "text": "5.6 Shielding Effects\n\n\n\nTable¬†1: Shielding effects\n\n\n\n\n\n\n\n\n\n\n\nType\nShielding\n\n\n\nTo Substrate\nBetween layers\nOn same layer\n\n\n\n\nOverlap shielding\n‚úî\n‚úî\n‚úò\n\n\nSidewall shielding\n‚úò\n‚úò\n‚úî\n\n\nLateral fringe shielding\n‚úò\n‚úî\n‚úî\n\n\nVertical fringe shielding\n‚úî\n‚úî\n‚úò\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nOverlap shielding\n\n\n\n\n\n\n\nSidewall shielding\n\n\n\n\n\n\n\n\n\nLateral fringe shielding\n\n\n\n\n\n\n\nVertical fringe shielding\n\n\n\n\n\n\nFigure¬†1: Shielding Effects"
  },
  {
    "objectID": "doc/doc.html#footnotes",
    "href": "doc/doc.html#footnotes",
    "title": "KLayout-PEX Documentation",
    "section": "Footnotes",
    "text": "Footnotes\n\n\nMetal-Oxide-Metal capacitors‚Ü©Ô∏é\nC++ generator scripts the built-in tech files are located in cxx/gen_tech_pb/pdk/*.cpp.‚Ü©Ô∏é\nTo find the site-packages directory for the klayout-pex package, call pip3 show klayout-pex.‚Ü©Ô∏é\nMetal-Oxide-Metal capacitors‚Ü©Ô∏é\nMetal-Insulator-Metal capacitors‚Ü©Ô∏é"
  }
]